with "config/stm32_drivers_config.gpr";
with "config/stm32_config_config.gpr";
project Stm32_Drivers is

   for Target use "arm-eabi";
   case Stm32_Config_Config.Runtime is
      when "light_tasking" => 
         for Runtime ("Ada") use "light-tasking-" & Stm32_Config_Config.Board;
      when others =>
         for Runtime ("Ada") use Stm32_Config_Config.Runtime & "-" & Stm32_Config_Config.Board;
   end case;
   
   for Library_Name use "Stm32_Drivers";
   for Library_Version use Project'Library_Name & ".so." & Stm32_Drivers_Config.Crate_Version;

   Driver_Src_Dirs := ("src/adc",
                       "src/dac",
                       "src/dcmi",
                       "src/device_id",
                       "src/dma2d",
                       "src/dma_interrupts",
                       "src/exti",
                       "src/fmc",
                       "src/gpio",
                       "src/i2s",
                       "src/i2c_setup",
                       "src/iwdg",
                       "src/ltdc",
                       "src/pwm",
                       "src/rng",
                       "src/rtc",
                       "src/sd",
                       "src/spi",
                       "src/syscfg",
                       "src/timers");
   case Stm32_Config_Config.Mcu is
      when "stm32f429x" =>
         Driver_Src_Dirs := Driver_Src_Dirs & ("src/stm32f4/dma",
                                               "src/stm32f4/i2c",
                                               "src/stm32f4/power_control",
                                               "src/stm32f4/stm32f42x",
                                               "src/stm32f4/uart",
                                               "src/stm32f4/crc");
      when "stm32f407" =>
         Driver_Src_Dirs := Driver_Src_Dirs & ("src/stm32f4/dma",
                                               "src/stm32f4/i2c",
                                               "src/stm32f4/power_control",
                                               "src/stm32f4/uart",
                                               "src/stm32f4/crc");

      when "stm32f746x" =>
         Driver_Src_Dirs := Driver_Src_Dirs & ("src/stm32f7/i2c",
                                               "src/stm32f7/power_control",
                                               "src/stm32f7/stm32f7x",
                                               "src/stm32f7/stm32f7x/dma");
      when others => null;
   end case;

   for Source_Dirs use ("src/", "config/") & Driver_Src_Dirs;
   for Object_Dir use "obj/" & Stm32_Drivers_Config.Build_Profile;
   for Create_Missing_Dirs use "True";
   for Library_Dir use "lib";

   type Library_Type_Type is ("relocatable", "static", "static-pic");
   Library_Type : Library_Type_Type :=
     external ("STM32_DRIVERS_LIBRARY_TYPE", external ("LIBRARY_TYPE", "static"));
   for Library_Kind use Library_Type;

   package Compiler is
      for Default_Switches ("Ada") use Stm32_Drivers_Config.Ada_Compiler_Switches;
   end Compiler;

   package Binder is
      for Switches ("Ada") use ("-Es"); --  Symbolic traceback
   end Binder;

   package Install is
      for Artifacts (".") use ("share");
   end Install;

end Stm32_Drivers;
